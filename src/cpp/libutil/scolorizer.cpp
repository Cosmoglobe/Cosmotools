#include <scolorizer.h>
#include <string>
#include <vector>
#include <svector.h>
#include <stoken.h>
#include <stypes.h>
#include <serror.h>
#include <cstdio>

namespace skn {

Colorizer::Colorizer() {}
Colorizer::Colorizer(const std::string & s)
{
	std::vector<std::string> tokens = tokenize(s, ", ");
	for(int i = 0; i < tokens.size(); i++)
	{
		std::vector<std::string> parts = tokenize(tokens[i], ": #");
		if(parts.size() != 2)
			serror("Syntax error in colorizer specification '%s'!", tokens[i].c_str());
		double p; Pixel col(0,0,0);
		if(std::sscanf(parts[0].c_str(), "%lf", &p) < 1)
			serror("Error parsing colorization location in '%s'!", parts[0].c_str());
		col = parse_color(parts[1].c_str());
		if(std::sscanf(parts[1].c_str(), "%02hhx%02hhx%02hhx", &col(0), &col(1), &col(2)) < 3)
			serror("Error parsing colorization color in '%s'!", parts[1].c_str());
		pos.push_back(p);
		cols.push_back(col);
	}
}

Colorizer & Colorizer::push_back(double val, const Pixel & col)
{
	pos.push_back(val);
	cols.push_back(col);
	return *this;
}

Pixel Colorizer::operator()(double d) const
{
	if(pos.empty()) return Pixel();
	if(pos.size() == 1) return cols[0];
	if(d > pos.back()) return cols.back();
	if(d < pos.front()) return cols.front();
	int b; for(b = 1; b < pos.size() && pos[b] < d; b++);
	int a = b-1;
	double f = (d-pos[a])/(pos[b]-pos[a]), g = (pos[b]-d)/(pos[b]-pos[a]);
	Pixel res;
	for(int i = 0; i < size(res); i++)
		res[i] = byte(g*cols[a](i) + f*cols[b](i) + 0.5);
	return res;
}

Colorizer Colorizer::wmap("0:000080,0.15:0000ff,0.4:00ffff,0.7:ffff00,0.9:ff5500,1:800000");
Colorizer Colorizer::planck("0.0:0000FF,0.00392156862745098:0002FF,0.00784313725490196:0005FF,0.011764705882352941:0008FF,0.01568627450980392:000AFF,0.0196078431372549:000DFF,0.023529411764705882:0010FF,0.027450980392156862:0012FF,0.03137254901960784:0015FF,0.03529411764705882:0018FF,0.0392156862745098:001AFF,0.043137254901960784:001DFF,0.047058823529411764:0020FF,0.050980392156862744:0022FF,0.054901960784313725:0025FF,0.058823529411764705:0028FF,0.06274509803921569:002AFF,0.06666666666666667:002DFF,0.07058823529411765:0030FF,0.07450980392156863:0032FF,0.0784313725490196:0035FF,0.08235294117647059:0038FF,0.08627450980392157:003AFF,0.09019607843137255:003DFF,0.09411764705882353:0040FF,0.09803921568627451:0042FF,0.10196078431372549:0045FF,0.10588235294117647:0048FF,0.10980392156862745:004AFF,0.11372549019607843:004DFF,0.11764705882352941:0050FF,0.12156862745098039:0052FF,0.12549019607843137:0055FF,0.12941176470588234:0058FF,0.13333333333333333:005AFF,0.13725490196078433:005DFF,0.1411764705882353:0060FF,0.14509803921568626:0062FF,0.14901960784313725:0065FF,0.15294117647058825:0068FF,0.1568627450980392:006AFF,0.16078431372549018:006DFF,0.16470588235294117:0070FF,0.16862745098039217:0072FF,0.17254901960784313:0075FF,0.1764705882352941:0077FF,0.1803921568627451:007AFF,0.1843137254901961:007CFF,0.18823529411764706:007FFF,0.19215686274509802:0081FF,0.19607843137254902:0084FF,0.2:0086FF,0.20392156862745098:0089FF,0.20784313725490194:008BFF,0.21176470588235294:008EFF,0.21568627450980393:0090FF,0.2196078431372549:0093FF,0.22352941176470587:0096FF,0.22745098039215686:0098FF,0.23137254901960785:009BFF,0.23529411764705882:009DFF,0.2392156862745098:00A0FF,0.24313725490196078:00A2FF,0.24705882352941178:00A5FF,0.25098039215686274:00A7FF,0.2549019607843137:00AAFF,0.2588235294117647:00ACFF,0.2627450980392157:00AFFF,0.26666666666666666:00B1FF,0.27058823529411763:00B4FF,0.27450980392156865:00B6FF,0.2784313725490196:00B9FF,0.2823529411764706:00BCFF,0.28627450980392155:00BEFF,0.2901960784313725:00C1FF,0.29411764705882354:00C3FF,0.2980392156862745:00C6FF,0.30196078431372547:00C8FF,0.3058823529411765:00CBFF,0.30980392156862746:00CDFF,0.3137254901960784:00D0FF,0.3176470588235294:00D2FF,0.32156862745098036:00D5FF,0.3254901960784314:00D7FF,0.32941176470588235:00DAFF,0.3333333333333333:00DDFF,0.33725490196078434:06DDFE,0.3411764705882353:0CDDFD,0.34509803921568627:12DEFC,0.34901960784313724:18DEFB,0.3529411764705882:1EDEFA,0.3568627450980392:24DFF9,0.3607843137254902:2ADFF8,0.36470588235294116:30E0F7,0.3686274509803922:36E0F6,0.37254901960784315:3CE0F5,0.3764705882352941:42E1F5,0.3803921568627451:48E1F4,0.38431372549019605:4EE1F3,0.38823529411764707:55E2F2,0.39215686274509803:5BE2F1,0.396078431372549:61E3F0,0.4:67E3EF,0.403921568627451:6DE3EE,0.40784313725490196:73E4ED,0.4117647058823529:79E4EC,0.4156862745098039:7FE5EC,0.4196078431372549:85E5EB,0.4235294117647059:8BE5EA,0.42745098039215684:91E6E9,0.43137254901960786:97E6E8,0.43529411764705883:9DE6E7,0.4392156862745098:A3E7E6,0.44313725490196076:AAE7E5,0.44705882352941173:B0E8E4,0.45098039215686275:B6E8E3,0.4549019607843137:BCE8E2,0.4588235294117647:C2E9E2,0.4627450980392157:C8E9E1,0.4666666666666667:CEE9E0,0.47058823529411764:D4EADF,0.4745098039215686:DAEADE,0.4784313725490196:E0EBDD,0.4823529411764706:E6EBDC,0.48627450980392156:ECEBDB,0.49019607843137253:F2ECDA,0.49411764705882355:F8ECD9,0.4980392156862745:FFEDD9,0.5019607843137255:FFEBD3,0.5058823529411764:FFEACE,0.5098039215686274:FFE9C9,0.5137254901960784:FFE7C4,0.5176470588235293:FFE6BF,0.5215686274509804:FFE5BA,0.5254901960784314:FFE3B5,0.5294117647058824:FFE2B0,0.5333333333333333:FFE1AB,0.5372549019607843:FFDFA6,0.5411764705882353:FFDEA1,0.5450980392156862:FFDD9C,0.5490196078431373:FFDB97,0.5529411764705883:FFDA92,0.5568627450980392:FFD98D,0.5607843137254902:FFD788,0.5647058823529412:FFD683,0.5686274509803921:FFD57E,0.5725490196078431:FFD379,0.5764705882352941:FFD274,0.580392156862745:FFD16F,0.5843137254901961:FFCF69,0.5882352941176471:FFCE64,0.592156862745098:FFCD5F,0.596078431372549:FFCB5A,0.6:FFCA55,0.6039215686274509:FFC950,0.6078431372549019:FFC74B,0.611764705882353:FFC646,0.615686274509804:FFC541,0.6196078431372549:FFC33C,0.6235294117647059:FFC237,0.6274509803921569:FFC132,0.6313725490196078:FFBF2D,0.6352941176470588:FFBE28,0.6392156862745098:FFBD23,0.6431372549019607:FFBB1E,0.6470588235294118:FFBA19,0.6509803921568628:FFB914,0.6549019607843137:FFB70F,0.6588235294117647:FFB60A,0.6627450980392157:FFB505,0.6666666666666666:FFB400,0.6705882352941176:FFB100,0.6745098039215687:FFAF00,0.6784313725490196:FFAC00,0.6823529411764706:FFAA00,0.6862745098039216:FFA700,0.6901960784313725:FFA500,0.6941176470588235:FFA200,0.6980392156862745:FFA000,0.7019607843137254:FF9D00,0.7058823529411764:FF9B00,0.7098039215686275:FF9800,0.7137254901960784:FF9600,0.7176470588235294:FF9300,0.7215686274509804:FF9100,0.7254901960784313:FF8E00,0.7294117647058823:FF8C00,0.7333333333333333:FF8900,0.7372549019607844:FF8700,0.7411764705882353:FF8400,0.7450980392156863:FF8200,0.7490196078431373:FF7F00,0.7529411764705882:FF7D00,0.7568627450980392:FF7A00,0.7607843137254902:FF7800,0.7647058823529411:FF7500,0.7686274509803921:FF7300,0.7725490196078432:FF7000,0.7764705882352941:FF6E00,0.7803921568627451:FF6B00,0.7843137254901961:FF6900,0.788235294117647:FF6600,0.792156862745098:FF6400,0.796078431372549:FF6100,0.8:FF5F00,0.803921568627451:FF5C00,0.807843137254902:FF5A00,0.8117647058823529:FF5700,0.8156862745098039:FF5500,0.8196078431372549:FF5200,0.8235294117647058:FF5000,0.8274509803921568:FF4D00,0.8313725490196078:FF4B00,0.8352941176470589:FB4900,0.8392156862745098:F74700,0.8431372549019608:F44500,0.8470588235294118:F04400,0.8509803921568627:EC4200,0.8549019607843137:E94000,0.8588235294117647:E53E00,0.8627450980392157:E23D00,0.8666666666666667:DE3B00,0.8705882352941177:DA3900,0.8745098039215686:D73700,0.8784313725490196:D33600,0.8823529411764706:D03400,0.8862745098039215:CC3200,0.8901960784313725:C83000,0.8941176470588235:C52F00,0.8980392156862745:C12D00,0.9019607843137255:BE2B00,0.9058823529411765:BA2900,0.9098039215686274:B62800,0.9137254901960784:B32600,0.9176470588235294:AF2400,0.9215686274509803:AC2200,0.9254901960784314:A82100,0.9294117647058824:A41F00,0.9333333333333333:A11D00,0.9372549019607843:9D1B00,0.9411764705882353:9A1A00,0.9450980392156862:961800,0.9490196078431372:921600,0.9529411764705882:8F1400,0.9568627450980391:8B1300,0.9607843137254902:881100,0.9647058823529412:840F00,0.9686274509803922:800D00,0.9725490196078431:7D0C00,0.9764705882352941:790A00,0.9803921568627451:760800,0.984313725490196:720600,0.9882352941176471:6E0500,0.9921568627450981:6B0300,0.996078431372549:670100,1.0:640000");

Pixel parse_color(const char * str)
{
	Pixel col;
	if(std::sscanf(str, "%02hhx%02hhx%02hhx", &col(0), &col(1), &col(2)) < 3)
		serror("Error parsing colorization color in '%s'!", str);
	return col;
}

}
